[tool.poetry]
name = "jb-jiva-service"
version = "0.1.0"
description = ""
authors = ["OpenNyAI Team <opennyai@googlegroups.com>"]
readme = "README.md"
packages = [{include = "jiva"}]

[tool.poetry.dependencies]
python = ">=3.10, <4.0.0"
pydantic = "^1.10.7"
uvicorn = {extras = ["standard"], version = "^0.22.0"}
google-cloud-storage = "^2.9.0"
jb-core = {path = "../packages/jb-core", develop = true}
cachetools = "^5.3.1"
scikit-learn = "^1.2.2"
jb-library = {path = "../packages/jb-library", develop = true}
jb-legal-library = {path = "../packages/jb-legal-library", develop = true}
httpx = "^0.24.1"
fuzzywuzzy = "^0.18.0"
openpyxl = "^3.1.2"
openai = "^0.27.8"
asgiref = "^3.7.2"
celery = "^5.3.1"
redis = "^4.6.0"
jb-storage = {path = "../packages/jb-storage", develop = true}
python-multipart = "^0.0.6"
pillow = "^10.0.0"
asyncpg = "^0.28.0"
fastapi = "0.100.0"
jb-auth-service = {path = "../jb-auth-service", develop = true}
jb-auth-token = {path = "../packages/jb-auth-token", develop = true}
jinja2 = "^3.1.2"
pytz = "^2023.3"
types-pytz = "^2023.3.0.1"
sendgrid = "^6.10.0"

[tool.pytest.ini_options]
pythonpath = [
  "."
]

[tool.poetry.group.dev.dependencies]
flake8 = "^6.0.0"
black = "^23.3.0"
mypy = "^1.3.0"
poethepoet = "^0.20.0"
pytest-asyncio = "^0.21.0"
pytest-mock = "^3.10.0"
gunicorn = "^20.1.0"
faker = "^18.11.1"
pytest-celery = "^0.0.0"
oauth2client = "^4.1.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.poe.tasks.lint]
shell = """
black jiva tests
flake8 jiva tests
mypy jiva tests
"""
interpreter = "bash"
help = "format, lint, typecheck"


[tool.poe.tasks.test]
cmd = "python -m pytest -vv -o log_cli=1 -o log_cli_level=INFO -W 'ignore::DeprecationWarning' $FILE"
args = [{name="FILE", default="tests", positional=true}]
help = "run tests using pytest"
envfile = "tests/.env"

[tool.poe.tasks.start]
shell = """
uvicorn --port 8080 --reload jiva:app
"""
help = "start the server for local development"


[tool.poe.tasks.build]
shell = """
docker build --platform=linux/amd64  -f tools/Dockerfile -t gcr.io/indian-legal-bert/jiva_service:latest .. 
"""
help = "build docker container"


[tool.poe.tasks.generate]
cmd = "tools/generate_ts.sh"
help = "generate typescript client api"